{
  "version": 3,
  "sources": ["../../../../../apps/erpnext_thailand/erpnext_thailand/public/js/print_format.js", "../../../../../apps/erpnext_thailand/erpnext_thailand/public/js/deposit_utils.js"],
  "sourcesContent": ["frappe.provide(\"erpnext_thailand.print\");\n\nerpnext_thailand.print.print_pdf = function(doc) {\n\t// Fetch default print formats for the given doctype and docname\n\tfrappe.call({\n\t\tmethod: \"erpnext_thailand.custom.print_format.get_print_formats\",\n\t\targs: {\n\t\t\tdoctype: doc.doctype,\n\t\t\tdocname: doc.name\n\t\t},\n\t\tcallback: function(r) {\n\t\t\tif (r.message) {\n\t\t\t\tlet { print_formats, default_format, default_copies } = r.message;\n\t\t\t\t// Create a dialog to select print format\n\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: __(\"Select Print Format\"),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __(\"Print Format\"),\n\t\t\t\t\t\t\tfieldname: \"print_format\",\n\t\t\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\t\t\toptions: print_formats,\n\t\t\t\t\t\t\treqd: 1,\n\t\t\t\t\t\t\tdefault: default_format\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tprimary_action_label: __(\"Print PDF\"),\n\t\t\t\t\tprimary_action(values) {\n\t\t\t\t\t\tlet print_format = values.print_format;\n\t\t\t\t\t\tconst w = window.open(\n\t\t\t\t\t\t\t\"/api/method/erpnext_thailand.custom.print_format.download_print_pdf?\" +\n\t\t\t\t\t\t\t\t\"doctype=\" +\n\t\t\t\t\t\t\t\tencodeURIComponent(doc.doctype) +\n\t\t\t\t\t\t\t\t\"&name=\" +\n\t\t\t\t\t\t\t\tencodeURIComponent(doc.name) +\n\t\t\t\t\t\t\t\t\"&format=\" +\n\t\t\t\t\t\t\t\tencodeURIComponent(print_format)\n\t\t\t\t\t\t\t\t// Following are params for future implementation.\n\t\t\t\t\t\t\t\t// \"&no_letterhead=\" +\n\t\t\t\t\t\t\t\t// (with_letterhead ? \"0\" : \"1\") +\n\t\t\t\t\t\t\t\t// \"&letterhead=\" +\n\t\t\t\t\t\t\t\t// encodeURIComponent(letterhead) +\n\t\t\t\t\t\t\t\t// \"&options=\" +\n\t\t\t\t\t\t\t\t// encodeURIComponent(pdf_options)\n\t\t\t\t\t\t\t\t// --\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!w) {\n\t\t\t\t\t\t\tfrappe.msgprint(__(\"Please enable pop-ups\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\td.hide();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\td.show();\n\t\t\t}\n\t\t}\n\t});\n};\n", "frappe.provide(\"erpnext_thailand.deposit_utils\");\n\nerpnext_thailand.deposit_utils.get_deposits = function(frm, is_button_clicked = true) {\n    frappe.call({\n        method: \"erpnext_thailand.custom.deposit_utils.get_deposits\",\n        args: { doc: frm.doc },\n        callback: function(r) {\n            // Clear existing deductions\n            frm.clear_table(\"deposits\");\n            if (r.message.length > 0) {\n                let deductions = r.message;\n                let allocated_amount = 0;\n\n                // Add new deductions\n                deductions.forEach(function(d) {\n                    let c = frm.add_child(\"deposits\");\n                    c.reference_name = d.reference_name;\n                    c.reference_row = d.reference_row;\n                    c.remarks = d.remarks;\n                    c.deposit_amount = d.deposit_amount;\n                    c.allocated_amount = d.allocated_amount;\n\n                    // Keep track of the total allocated amount\n                    allocated_amount += d.allocated_amount;\n                });\n\n                // Show alert only if not triggered by button click\n                if (!is_button_clicked) {\n                    let formatted_amount = new Intl.NumberFormat().format(allocated_amount);\n                    frappe.show_alert({\n                        message: __(\n                            \"Deposit amount <b>{0}</b> will be allocated when you save this invoice.\",\n                            [formatted_amount]\n                        ),\n                        indicator: \"green\"\n                    }, 10);\n                }\n            }\n\n            // Refresh the child table\n            frm.refresh_field(\"deposits\");\n            frm.dirty();\n        }\n    });\n};\n\nerpnext_thailand.deposit_utils.add_create_deposit_button = function(frm) {\n    // Add a custom button \"Create Deposit Invoice\"\n    if (!frm.is_new() && frm.doc.docstatus === 1 && !frm.doc.deposit_invoice) {\n        frm.add_custom_button(__(\"Create Deposit Invoice\"), function() {\n            // Open a dialog to ask for % deposit and amount deposit\n            let is_updating = false; // Flag to prevent infinite loops\n\n            const dialog = new frappe.ui.Dialog({\n                title: __(\"Create Deposit Invoice\"),\n                fields: [\n                    {\n                        label: __(\"Deposit Percentage\"),\n                        fieldname: \"deposit_percentage\",\n                        fieldtype: \"Percent\",\n                        reqd: 1,\n                        default: frm.doc.percent_deposit\n                    },\n                    {\n                        label: __(\"Deposit Amount\"),\n                        fieldname: \"deposit_amount\",\n                        fieldtype: \"Currency\",\n                        reqd: 1,\n                        default: (frm.doc.total || 0) * frm.doc.percent_deposit / 100\n                    }\n                ],\n                primary_action_label: __(\"Create\"),\n                primary_action: function(values) {\n                    if (!values.deposit_amount) {\n                        frappe.msgprint({\n                            title: __(\"Warning\"),\n                            indicator: \"orange\",\n                            message: __(\"Deposit Percentage/Amount are required\")\n                        });\n                        return;\n                    }\n                    // Use frappe.model.open_mapped_doc to create the Purchase Invoice\n                    frappe.model.open_mapped_doc({\n                        method: \"erpnext_thailand.custom.deposit_utils.create_deposit_invoice\",\n                        frm: frm,\n                        args: {\n                            doctype: frm.doc.doctype,\n                            deposit_amount: values.deposit_amount,\n                        }\n                    });\n                    dialog.hide();\n                }\n            });\n\n            // Add event listeners to update fields dynamically\n            dialog.fields_dict.deposit_percentage.$input.on(\"input\", function() {\n                if (is_updating) return;\n                is_updating = true;\n\n                const percent = parseFloat(dialog.get_value(\"deposit_percentage\") || 0);\n                const total = frm.doc.total || 0;\n\n                if (percent > 100) {\n                    frappe.msgprint({\n                        title: __(\"Warning\"),\n                        indicator: \"orange\",\n                        message: __(\"Deposit Percentage cannot exceed 100%.\")\n                    });\n                    dialog.set_value(\"deposit_percentage\", 100);\n                }\n\n                const amount = (total * percent) / 100;\n                dialog.set_value(\"deposit_amount\", amount);\n                is_updating = false;\n            });\n\n            dialog.fields_dict.deposit_amount.$input.on(\"input\", function() {\n                if (is_updating) return;\n                is_updating = true;\n\n                const amount = parseFloat(dialog.get_value(\"deposit_amount\") || 0);\n                const total = frm.doc.total || 0;\n                const percent = total > 0 ? (amount / total) * 100 : 0;\n\n                if (percent > 100) {\n                    frappe.msgprint({\n                        title: __(\"Warning\"),\n                        indicator: \"orange\",\n                        message: __(\"Deposit Percentage cannot exceed 100%.\")\n                    });\n                    dialog.set_value(\"deposit_percentage\", 100);\n                    dialog.set_value(\"deposit_amount\", total);\n                } else {\n                    dialog.set_value(\"deposit_percentage\", percent);\n                }\n\n                is_updating = false;\n            });\n\n            dialog.show();\n        }).addClass(frm.doc.has_deposit ? \"btn-primary\" : \"btn-secondary\");;\n    }\n};\n\n\nerpnext_thailand.deposit_utils.get_deposit_item = function(frm) {\n    // For deposit invoice, add 1 line itema as Deposit Item\n    if (frm.doc.is_deposit_invoice) {\n        frm.doc.items = [];\n        frappe.call({\n            method: \"erpnext_thailand.custom.item.get_deposit_item\",\n            args: {\n                company: frm.doc.company\n            },\n            callback: function(r) {\n                if (r.message) {\n                    cost_center = frm.doc.doctype == \"Sales Invoice\" ? r.message.selling_cost_center : r.message.buying_cost_center;\n                    frm.set_value(\"cost_center\", cost_center);\n                    frm.add_child(\"items\", {\n                        item_code: r.message.item_code,\n                        item_name: r.message.item_name,\n                        uom: r.message.uom,\n                        qty: 1,\n                        is_deposit_item: 1,\n                        income_account: r.message.sales_deposit_account,\n                        expense_account: r.message.purchase_deposit_account,\n                    });\n                    frm.refresh_field(\"items\");\n                } else {\n                    frappe.msgprint(__(\"No deposit items found!\"));\n                }\n            }\n        });\n    } else {\n        // Optional: Remove the deposit item if unchecked\n        frm.doc.items = frm.doc.items.filter(item => item.is_deposit_item !== 1);\n        frm.refresh_field(\"items\");\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
